(function (a) { jQuery.fn.extend({ initAudio: function () { var b = a("audio", this)[0]; var d = a("source", this); var g = 0; var e = ""; this.append('<div class="music_info clearfix">					<div class="cd_holder"><span class="stick"></span><div class="cd" title="点击展开音乐列表"></div></div>					<div class="meta_data">						<span class="title"></span>						<div class="volume_control">							<a class="decrease">a</a>							<span class="base_bar">								<span class="progress_bar"></span>								<a class="slider"></a>							</span>							<a class="increase">b</a>						</div>					</div>				</div>				<ul class="music_list"></ul>				<div class="controls">					<div class="play_controls">						<a class="btn_previous">e</a>						<a class="btn_play">c</a>						<a class="btn_next">d</a>					</div>					<div class="time_line">						<span class="passed_time">0:00</span>						<span class="base_bar">							<span class="progress_bar"></span>						</span>						<span class="total_time">0:00</span>					</div>				</div>'); for (var c = 0; c < d.length; c++) { a(".music_list").append("<li>" + d[c].title + "</li>") } HTMLAudioElement.prototype.changeVolumeTo = function (h) { this.volume = h; a(".volume_control .progress_bar").css("width", h * 100 + "%"); a(".volume_control .slider").css("left", h * 100 - 7 + "px") }; a(".btn_play").click(function () { if (b.paused) { b.play() } else { b.pause() } }); a(".btn_next").click(function () { ++g > d.length - 1 && (g = 0); currentSrc = a("#myAudio source").eq(g).prop("src"); b.src = currentSrc; b.play() }); a(".btn_previous").click(function () { --g < 0 && (g = 0); currentSrc = a("#myAudio source").eq(g).prop("src"); b.src = currentSrc; b.play() }); a(".volume_control .decrease").click(function () { var h = b.volume - 0.1; h < 0 && (h = 0); b.changeVolumeTo(h) }); a(".volume_control .increase").click(function () { var h = b.volume + 0.1; h > 1 && (h = 1); b.changeVolumeTo(h) }); a(".volume_control .base_bar").mousedown(function (i) { var k = i.clientX; var j = a(this).offset().left; var h = (k - j) / 100; h > 1 && (h = 1); h < 0 && (h = 0); b.changeVolumeTo(h) }); a(".volume_control .slider").mousedown(starDrag = function (i) { i.preventDefault(); var k = a(this).position().left; var l = i.clientX; var j = this; var h = a(".volume_control .progress_bar")[0]; a(document).mousemove(doDrag = function (n) { n.preventDefault(); var m = n.clientX - l; var o = k + m; (o < -7) && (o = -7); (o > 93) && (o = 93); j.style.left = o + "px"; h.style.width = o + 7 + "%"; b.changeVolumeTo((o + 7) / 100) }); a(document).mouseup(stopDrag = function () { a(document).unbind("mousemove", doDrag); a(document).unbind("mouseup", stopDrag) }) }); a(".time_line .base_bar").mousedown(function (i) { var k = i.clientX; var j = a(this).offset().left; var h = (k - j) / 140 * 100; b.currentTime = b.duration * h / 100 }); a(".music_info .cd").click(function () { a(".music_list").slideToggle(600) }); a(".music_list").click(function (i) { var h = a(i.target).index(); g = h; currentSrc = a("#myAudio source:eq(" + g + ")").prop("src"); b.src = currentSrc; b.play() }); a(b).bind("loadedmetadata", function () { var h = f(b.duration); var i = a("#myAudio source:eq(" + g + ")").attr("title"); a(".time_line .total_time").text(h); a(".meta_data .title").text(i) }); a(b).bind("timeupdate", function () { var j = this.duration; var i = this.currentTime; var h = i / j * 100; a(".time_line .progress_bar").css("width", h + "%"); var k = f(i); a(".time_line .passed_time").text(k) }); a(b).bind("play", function () { a(".btn_play").text("h"); a(".music_list li").eq(g).addClass("active").siblings().removeClass("active"); a(".music_info .cd").addClass("rotate"); a(".cd_holder .stick").addClass("play") }); a(b).bind("pause", function () { a(".btn_play").text("c"); a(".music_info .cd").removeClass("rotate"); a(".cd_holder .stick").removeClass("play") }); a(b).bind("ended", function () { a(".btn_next").triggerHandler("click") }); a(b).bind("progress", function () { if (b.buffered.length == 1) { if (b.buffered.start(0) == 0) { var i = b.buffered.end(0); var h = i / b.duration * 100; a(".time_line .base_bar").css("background-size", h + "% 100%") } } }); a(b).trigger("loadedmetadata"); function f(i) { var h = parseInt(i / 60); var j = parseInt(i % 60); j < 10 && (j = "0" + j); return h + ":" + j } } }) })(jQuery);
